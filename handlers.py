from aiogram import Router, types, F
from aiogram.filters import CommandStart
from aiogram.types import Message
import requests
from bot import bot
from config import CHANEL_ID, ADMIN_IDS, KEY_EXCHANGERATE
from encar_pars import encar_pars
from translator import trans

router = Router()

async def create_text(car_list):
    model_ = await trans(car_list[0])
    model = model_.replace('The ', '').replace('Benz', 'Mercedes-Benz').replace('the ', '')
    year = '20' + car_list[1][:2]
    if ',' in car_list[3]:
        price_co = float((car_list[3].replace(',', '.'))) * 10000000
    else:
        price_co = int(car_list[3]) * 10000
    response = requests.get(f"https://v6.exchangerate-api.com/v6/{KEY_EXCHANGERATE}/latest/USD")
    currency_usd = response.json()["conversion_rates"]["KRW"]
    price_usd = str((int(price_co/currency_usd + 1500) // 100) * 100)
    if len(price_usd) > 3:
        price_usd = price_usd[:-3] + ' ' + price_usd[-3:]
    km = ''
    km_ = car_list[2]
    for k in km_:
        if k.isdigit():
            km += k
    if len(km) > 3:
        km = km[:-3] + ' ' + km[-3:]
    text =f"""
–î–æ—Å—Ç—É–ø–µ–Ω –∫ –∑–∞–∫–∞–∑—É –∏–∑ üá∞üá∑
{model}
{year} –≥–æ–¥
{km} –∫–º
–ë–µ–∑ –¥—Ç–ø –∏ –æ–∫—Ä–∞—Å–æ–≤
–ë—é–¥–∂–µ—Ç –ø–æ–¥ üîë –¥–æ –ú–æ—Å–∫–≤—ã {price_usd} $
–í–æ–∑–º–æ–∂–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –≤–æ –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –†–§ üá∑üá∫

üí≠ 89033635817, –ú–∏—Ö–∞–∏–ª üü¢
"""
    return text

@router.message(CommandStart(), F.from_user.id.in_(ADMIN_IDS))
async def process_start_admin(message: Message):
    await message.answer(text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–∫–∏–Ω—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ —Å —Å–∞–π—Ç–∞ fem.encar.com –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É")


@router.message(F.text, F.from_user.id.in_(ADMIN_IDS))
async def parsing(message: types.Message):
    await message.answer('–ù–∞—á–∞–ª–∞—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏, –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ 30 —Å–µ–∫...')
    try:
        link = message.text
        car_list = await encar_pars(link)
        text = await create_text(car_list)
        for i in range(10):
            media = [types.InputMediaPhoto(type='photo', media=types.FSInputFile(f'pics/{i * 2 + 1}.jpg'))]
            if i != 9:
                media.append(types.InputMediaPhoto(type='photo', media=types.FSInputFile(f'pics/{i * 2 + 2}.jpg')))
            else:
                media.append(types.InputMediaPhoto(type='photo', media=types.FSInputFile(f'pics/{i * 2 + 2}.jpg'), caption=text))
            await bot.send_media_group(CHANEL_ID, media)
        await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª')
    except Exception as e:
        print(e)
        await message.answer(
"""
–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
1. –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –µ–µ –∏ –Ω–∞–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ.
2. –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º.
""")